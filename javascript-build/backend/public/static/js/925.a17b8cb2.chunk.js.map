{"version":3,"file":"static/js/925.a17b8cb2.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input/Input.js","shared/components/UIElements/Card/Card.js","shared/components/UIElements/ErrorModal/ErrorModal.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Button from '../../shared/components/FormElements/Button/Button';\r\nimport Input from '../../shared/components/FormElements/Input/Input';\r\nimport Card from '../../shared/components/UIElements/Card/Card';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\r\nimport useForm from '../../shared/hooks/form-hook';\r\nimport useHttp from '../../shared/hooks/http-hook';\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const placeId = useParams().placeId;\r\n\r\n  const { formState, inputHandler, setData } = useForm({\r\n    inputs: {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    overallForm: true,\r\n  });\r\n\r\n  const [place, setPlace] = useState();\r\n  const { isLoading, error, sendRequest, resetError } = useHttp();\r\n\r\n  useEffect(() => {\r\n    sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`).then(\r\n      (response) => {\r\n        if (!response.error) {\r\n          setPlace(response.place);\r\n          setData(\r\n            {\r\n              title: {\r\n                value: response.place.title,\r\n                isValid: true,\r\n              },\r\n              description: {\r\n                value: response.place.description,\r\n                isValid: true,\r\n              },\r\n            },\r\n            true\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }, [sendRequest, placeId, setData]);\r\n\r\n  if (!isLoading && !place && !error) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const updatePlaceHandler = async (e) => {\r\n    e.preventDefault();\r\n    const response = await sendRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n      'PATCH',\r\n      {\r\n        title: formState.inputs.title.value,\r\n        description: formState.inputs.description.value,\r\n      },\r\n      {\r\n        Authorization: 'Bearer ' + authCtx.token,\r\n      }\r\n    );\r\n    if (!response.error) {\r\n      navigate(`/${authCtx.userId}/places`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={resetError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && place && (\r\n        <form className='place-form' onSubmit={updatePlaceHandler}>\r\n          <Input\r\n            element='input'\r\n            type='text'\r\n            label='Title'\r\n            id='title'\r\n            errorText='Please enter a valid title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            onInput={inputHandler}\r\n            initialValue={place.title}\r\n            initialValidity={true}\r\n          />\r\n          <Input\r\n            element='textarea'\r\n            label='Description'\r\n            id='description'\r\n            errorText='Please enter a valid description of at least 5 chars'\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            onInput={inputHandler}\r\n            initialValue={place.description}\r\n            initialValidity={true}\r\n          />\r\n\r\n          <Button type='submit' disabled={!formState.overallForm}>\r\n            UPDATE PLACE\r\n          </Button>\r\n          <pre>{JSON.stringify(formState.inputs, null, 2)}</pre>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCHED':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatchInputAction] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValidity || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [onInput, id, value, isValid]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatchInputAction({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const blurHandler = () => {\r\n    dispatchInputAction({\r\n      type: 'TOUCHED',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || '3'}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from '../Modal/Modal';\nimport Button from '../../FormElements/Button/Button';\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.querySelector('#modal'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n        children={<ModalOverlay {...props} />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.id) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.id]: {\r\n            value: action.val,\r\n            isValid: action.isValid,\r\n          },\r\n        },\r\n        overallForm: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        overallForm: action.overallForm,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = initialValue => {\r\n  const [formState, dispatchFormAction] = useReducer(formReducer, initialValue);\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatchFormAction({\r\n      type: 'INPUT_CHANGE',\r\n      id: id,\r\n      val: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((inputs, overallForm) => {\r\n    dispatchFormAction({\r\n      type: 'SET_DATA',\r\n      inputs: inputs,\r\n      overallForm: overallForm,\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    formState,\r\n    inputHandler,\r\n    setData,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import axios from 'axios';\r\nimport { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', data = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrll);\r\n      try {\r\n        const response = await axios({\r\n          method: method,\r\n          url: url,\r\n          data: data,\r\n          headers: headers,\r\n          signal: httpAbortCtrll.signal,\r\n        });\r\n        const responseData = response.data;\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.response.data.message || 'Something went wrong');\r\n        return {\r\n          error: err.response.data.message || 'Something went wrong',\r\n        };\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const resetError = useCallback(() => setError(null), []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, resetError };\r\n};\r\n\r\nexport default useHttp;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["authCtx","useContext","AuthContext","navigate","useNavigate","placeId","useParams","useForm","inputs","title","value","isValid","description","overallForm","formState","inputHandler","setData","useState","place","setPlace","useHttp","isLoading","error","sendRequest","resetError","useEffect","process","then","response","className","updatePlaceHandler","e","preventDefault","Authorization","token","userId","onClear","asOverlay","onSubmit","element","type","label","id","errorText","validators","VALIDATOR_REQUIRE","onInput","initialValue","initialValidity","VALIDATOR_MINLENGTH","disabled","JSON","stringify","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatchInputAction","changeHandler","target","blurHandler","onChange","onBlur","rows","htmlFor","style","children","onCancel","header","show","footer","onClick","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","querySelector","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","dispatchFormAction","useCallback","setIsLoading","setError","activeHttpRequests","useRef","url","method","data","headers","httpAbortCtrll","AbortController","current","push","axios","signal","responseData","filter","reqCtrl","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}