{"version":3,"file":"static/js/99.b2b86ccc.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload/ImageUpload.js","shared/components/FormElements/Input/Input.js","shared/components/UIElements/ErrorModal/ErrorModal.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport Input from '../../shared/components/FormElements/Input/Input';\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport Button from '../../shared/components/FormElements/Button/Button';\r\nimport './PlaceForm.css';\r\nimport useForm from '../../shared/hooks/form-hook';\r\nimport useHttp from '../../shared/hooks/http-hook';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal/ErrorModal';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload/ImageUpload';\r\n\r\nconst NewPlace = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { formState, inputHandler } = useForm({\r\n    inputs: {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    overallForm: false,\r\n  });\r\n\r\n  const { isLoading, error, sendRequest, resetError } = useHttp();\r\n  const submitPlaceHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      const response = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/places',\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + authCtx.token,\r\n        }\r\n      );\r\n      // Success Case\r\n      if (!response.error) {\r\n        navigate(`/${authCtx.userId}/places`);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorModal onClear={resetError} error={error} />\r\n      <form className='place-form' onSubmit={submitPlaceHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          element='input'\r\n          label='Title'\r\n          id='title'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid title'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element='textarea'\r\n          label='Description'\r\n          id='description'\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText='Please enter a valid description of 5 chars at least'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element='input'\r\n          label='Address'\r\n          id='address'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid address'\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id='image'\r\n          onInput={inputHandler}\r\n          errorText='Please enter a valid image'\r\n        />\r\n        <Button type='submit' disabled={!formState.overallForm}>\r\n          ADD PLACE\r\n        </Button>\r\n        <pre style={{ textAlign: 'left' }}>\r\n          {JSON.stringify(formState.inputs, null, 2)}\r\n        </pre>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nimport './ImageUpload.css';\r\nconst ImageUpload = (props) => {\r\n  const filePickedRef = useRef();\r\n\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickedRef.current.click();\r\n  };\r\n\r\n  const pickHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      fileIsValid = true;\r\n      setIsValid(true);\r\n    } else {\r\n      fileIsValid = false;\r\n      setIsValid(false);\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        ref={filePickedRef}\r\n        type='file'\r\n        style={{ display: 'none' }}\r\n        id={props.id}\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Pick an image</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          Pick Image\r\n        </Button>\r\n      </div>\r\n      {file && !isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCHED':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatchInputAction] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValidity || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [onInput, id, value, isValid]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatchInputAction({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const blurHandler = () => {\r\n    dispatchInputAction({\r\n      type: 'TOUCHED',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || '3'}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport Modal from '../Modal/Modal';\nimport Button from '../../FormElements/Button/Button';\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.querySelector('#modal'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n        children={<ModalOverlay {...props} />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.id) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.id]: {\r\n            value: action.val,\r\n            isValid: action.isValid,\r\n          },\r\n        },\r\n        overallForm: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        overallForm: action.overallForm,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = initialValue => {\r\n  const [formState, dispatchFormAction] = useReducer(formReducer, initialValue);\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatchFormAction({\r\n      type: 'INPUT_CHANGE',\r\n      id: id,\r\n      val: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((inputs, overallForm) => {\r\n    dispatchFormAction({\r\n      type: 'SET_DATA',\r\n      inputs: inputs,\r\n      overallForm: overallForm,\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    formState,\r\n    inputHandler,\r\n    setData,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import axios from 'axios';\r\nimport { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', data = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrll);\r\n      try {\r\n        const response = await axios({\r\n          method: method,\r\n          url: url,\r\n          data: data,\r\n          headers: headers,\r\n          signal: httpAbortCtrll.signal,\r\n        });\r\n        const responseData = response.data;\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.response.data.message || 'Something went wrong');\r\n        return {\r\n          error: err.response.data.message || 'Something went wrong',\r\n        };\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const resetError = useCallback(() => setError(null), []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, resetError };\r\n};\r\n\r\nexport default useHttp;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["authCtx","useContext","AuthContext","navigate","useNavigate","useForm","inputs","title","value","isValid","description","address","image","overallForm","formState","inputHandler","useHttp","isLoading","error","sendRequest","resetError","submitPlaceHandler","e","preventDefault","formData","FormData","append","process","Authorization","token","userId","onClear","className","onSubmit","asOverlay","element","label","id","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","type","disabled","style","textAlign","JSON","stringify","props","filePickedRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValidity","inputState","dispatchInputAction","changeHandler","blurHandler","onBlur","rows","htmlFor","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","children","footerClass","ReactDOM","document","querySelector","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","dispatchFormAction","useCallback","setData","setIsLoading","setError","activeHttpRequests","url","method","data","headers","httpAbortCtrll","AbortController","push","axios","signal","response","responseData","filter","reqCtrl","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}