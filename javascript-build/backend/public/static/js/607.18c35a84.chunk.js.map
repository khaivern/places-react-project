{"version":3,"file":"static/js/607.18c35a84.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card/Card.js","shared/components/UIElements/ErrorModal/ErrorModal.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar/Avatar.js","users/components/UsersItem.js","users/components/UsersList.js","users/pages/Users.js"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from '../Modal/Modal';\nimport Button from '../../FormElements/Button/Button';\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.querySelector('#modal'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n        children={<ModalOverlay {...props} />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\nimport { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', data = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrll);\r\n      try {\r\n        const response = await axios({\r\n          method: method,\r\n          url: url,\r\n          data: data,\r\n          headers: headers,\r\n          signal: httpAbortCtrll.signal,\r\n        });\r\n        const responseData = response.data;\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.response.data.message || 'Something went wrong');\r\n        return {\r\n          error: err.response.data.message || 'Something went wrong',\r\n        };\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const resetError = useCallback(() => setError(null), []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, resetError };\r\n};\r\n\r\nexport default useHttp;\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../../shared/components/UIElements/Avatar/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card/Card';\r\nimport './UserItem.css';\r\n\r\nconst UsersItem = (props) => {\r\n  return (\r\n    <li className='user-item'>\r\n      <Card className='user-item__content'>\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className='user-item__image'>\r\n            <Avatar image={props.image} alt={props.name} />\r\n          </div>\r\n          <div className='user-item__info'>\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UsersItem;\r\n","import React from 'react';\r\nimport Card from '../../shared/components/UIElements/Card/Card';\r\nimport UsersItem from './UsersItem';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = ({ items }) => {\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>No users found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className='users-list'>\r\n      {items.map((user) => (\r\n        <UsersItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.imageUrl}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\r\n\r\nimport useHttp from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal/ErrorModal';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { isLoading, error, sendRequest, resetError } = useHttp();\r\n  useEffect(() => {\r\n    sendRequest(process.env.REACT_APP_BACKEND_URL + '/users').then((response) =>\r\n      setUsers(response.users)\r\n    );\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={resetError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && <UsersList items={users} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["props","className","style","children","onCancel","onClear","header","show","error","footer","onClick","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","document","querySelector","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","data","headers","httpAbortCtrll","AbortController","current","push","axios","signal","response","responseData","filter","reqCtrl","message","resetError","useEffect","forEach","abortCtrl","abort","src","image","alt","width","height","Card","to","id","name","placeCount","items","length","map","user","imageUrl","places","users","setUsers","useHttp","process","then","ErrorModal","LoadingSpinner","asOverlay"],"sourceRoot":""}