{"version":3,"file":"static/js/541.8809b1ee.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload/ImageUpload.js","shared/components/FormElements/Input/Input.js","shared/components/UIElements/Card/Card.js","shared/components/UIElements/ErrorModal/ErrorModal.js","shared/components/UIElements/Modal/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","users/pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nimport './ImageUpload.css';\r\nconst ImageUpload = (props) => {\r\n  const filePickedRef = useRef();\r\n\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickedRef.current.click();\r\n  };\r\n\r\n  const pickHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      fileIsValid = true;\r\n      setIsValid(true);\r\n    } else {\r\n      fileIsValid = false;\r\n      setIsValid(false);\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        ref={filePickedRef}\r\n        type='file'\r\n        style={{ display: 'none' }}\r\n        id={props.id}\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Pick an image</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          Pick Image\r\n        </Button>\r\n      </div>\r\n      {file && !isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCHED':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatchInputAction] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValidity || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [onInput, id, value, isValid]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatchInputAction({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const blurHandler = () => {\r\n    dispatchInputAction({\r\n      type: 'TOUCHED',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || '3'}\r\n        onChange={changeHandler}\r\n        onBlur={blurHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from '../Modal/Modal';\nimport Button from '../../FormElements/Button/Button';\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.querySelector('#modal'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n        children={<ModalOverlay {...props} />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.id) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.id]: {\r\n            value: action.val,\r\n            isValid: action.isValid,\r\n          },\r\n        },\r\n        overallForm: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        overallForm: action.overallForm,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = initialValue => {\r\n  const [formState, dispatchFormAction] = useReducer(formReducer, initialValue);\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatchFormAction({\r\n      type: 'INPUT_CHANGE',\r\n      id: id,\r\n      val: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((inputs, overallForm) => {\r\n    dispatchFormAction({\r\n      type: 'SET_DATA',\r\n      inputs: inputs,\r\n      overallForm: overallForm,\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    formState,\r\n    inputHandler,\r\n    setData,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import axios from 'axios';\r\nimport { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', data = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrll);\r\n      try {\r\n        const response = await axios({\r\n          method: method,\r\n          url: url,\r\n          data: data,\r\n          headers: headers,\r\n          signal: httpAbortCtrll.signal,\r\n        });\r\n        const responseData = response.data;\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.response.data.message || 'Something went wrong');\r\n        return {\r\n          error: err.response.data.message || 'Something went wrong',\r\n        };\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const resetError = useCallback(() => setError(null), []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, resetError };\r\n};\r\n\r\nexport default useHttp;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useContext, useState } from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button/Button';\r\nimport Input from '../../shared/components/FormElements/Input/Input';\r\nimport Card from '../../shared/components/UIElements/Card/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal/ErrorModal';\r\nimport useForm from '../../shared/hooks/form-hook';\r\n\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\nimport './Auth.css';\r\nimport useHttp from '../../shared/hooks/http-hook';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload/ImageUpload';\r\nconst Auth = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const { formState, inputHandler, setData } = useForm({\r\n    inputs: {\r\n      email: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    overallForm: false,\r\n  });\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const { isLoading, error, sendRequest, resetError } = useHttp();\r\n\r\n  const submitAuthHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isLogin) {\r\n      try {\r\n        const response = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          'POST',\r\n          {\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }\r\n        );\r\n\r\n        if (!response.error)\r\n          authCtx.login(response.user.id, response.user.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const response = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        if (!response.error)\r\n          authCtx.login(response.user.id, response.user.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  const switchModeHandler = () => {\r\n    if (isLogin) {\r\n      setData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    } else {\r\n      setData(\r\n        {\r\n          ...formState.inputs,\r\n          name: null,\r\n          image: null,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    }\r\n    setIsLogin((curr) => !curr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal onClear={resetError} error={error} />\r\n      <Card className='authentication'>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2 className='authentication__header'>\r\n          {!isLogin ? 'SIGNUP' : 'LOGIN'}\r\n        </h2>\r\n        <hr />\r\n        <form onSubmit={submitAuthHandler} className='place-form'>\r\n          {!isLogin && (\r\n            <Input\r\n              element='input'\r\n              type='text'\r\n              label='Name'\r\n              id='name'\r\n              errorText='Please enter a valid name'\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLogin && (\r\n            <ImageUpload\r\n              id='image'\r\n              center\r\n              onInput={inputHandler}\r\n              errorText='Please enter a valid image'\r\n            />\r\n          )}\r\n          <Input\r\n            element='input'\r\n            type='email'\r\n            label='Email'\r\n            id='email'\r\n            errorText='Please enter a valid email'\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element='input'\r\n            type='password'\r\n            label='Password'\r\n            id='password'\r\n            errorText='Please enter a valid password of at least 4 chars'\r\n            validators={[VALIDATOR_MINLENGTH(4)]}\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type='submit' disabled={!formState.overallForm}>\r\n            {!isLogin ? 'SIGNUP' : 'LOGIN'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse type='button' onClick={switchModeHandler}>\r\n          SWITCH MODE TO {isLogin ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n        <pre style={{ textAlign: 'left' }}>\r\n          {JSON.stringify(formState.inputs, null, 2)}\r\n        </pre>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","filePickedRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","ref","type","style","display","id","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValidity","inputState","dispatchInputAction","changeHandler","e","blurHandler","element","onBlur","rows","htmlFor","label","children","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","querySelector","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","overallForm","formState","dispatchFormAction","inputHandler","useCallback","setData","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","url","method","data","headers","httpAbortCtrll","AbortController","push","axios","signal","response","responseData","filter","reqCtrl","message","resetError","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","authCtx","useContext","AuthContext","useForm","email","password","isLogin","setIsLogin","useHttp","submitAuthHandler","process","login","user","token","formData","FormData","append","name","image","ErrorModal","Card","LoadingSpinner","asOverlay","Input","ImageUpload","disabled","inverse","curr","textAlign","JSON","stringify"],"sourceRoot":""}